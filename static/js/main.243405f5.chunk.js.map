{"version":3,"sources":["Application/style.ts","pages/home/user-list-container/style.ts","pages/home/user-list-container/user.tsx","pages/home/user-list-container/index.tsx","pages/home/hooks/useUserList.tsx","Application/authorization-context.tsx","pages/home/style.ts","pages/home/index.tsx","pages/login/style.ts","pages/login/index.tsx","Application/App.tsx","reportWebVitals.js","index.js"],"names":["MainApp","styled","div","UserListContainer","UserRow","UserAvatarContainer","Avatar","img","UserNameConatiner","SkeletonLoading","keyframes","SkeletonImage","SkeletonText","User","loading","name","className","src","UserList","useState","pageNumber","setPageNumber","setLoading","error","setError","users","setUsers","hasMore","setHasMore","useEffect","cancel","axios","method","url","params","page","results","cancelToken","CancelToken","c","then","res","data","map","user","picture","medium","userName","title","first","last","length","catch","e","isCancel","useUserList","observer","useRef","lastUserRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","setTimeout","prevPageNumber","observe","index","ref","AuthorizationContext","createContext","isAuthenticated","handleAuthentication","value","useAuthorization","useContext","HomeContainer","HeaderRow","HeadingContainer","ButtonContainer","LogoutButton","button","ListContainer","Home","history","useHistory","type","onClick","push","LoginCard","LoginTitle","Login","uname","setUname","pswd","setPswd","onSubmit","event","preventDefault","htmlFor","id","autoComplete","onChange","target","role","disabled","App","authorization","setIsAuthenticated","useProvideAuthorization","redirectPath","Provider","exact","path","render","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.243405f5.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const MainApp = styled.div`\n    text-align: center;\n`;\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nexport const UserListContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 1rem;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\r\n    transition: 0.3s;\r\n    &:hover {\r\n        box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\r\n    }\r\n    height: 80vh;\r\n    width: 90%;\r\n    overflow: scroll;\r\n`;\r\nexport const UserRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    padding-y: 0.5rem;\r\n    border-bottom: 0.0625rem solid black;\r\n`;\r\nexport const UserAvatarContainer = styled.div`\r\n    padding: 0.5rem;\r\n    justify-content: center;\r\n    display: flex;\r\n    flex: 2;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n    border-radius: 50%;\r\n    height: 2.5rem;\r\n    width: 2.5rem;\r\n`;\r\nexport const UserNameConatiner = styled.div`\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    flex: 10;\r\n    word-wrap: none;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    font-size: 1rem;\r\n`;\r\nexport const SkeletonLoading = keyframes`\r\n    0% { background-color: hsl(200, 20%, 70%);}\r\n    100% { background-color: hsl(200, 20%, 95%);}\r\n`;\r\n\r\nexport const SkeletonImage = styled.div`\r\n    opacity: 0.7;\r\n    animation: ${SkeletonLoading} 1s linear infinite alternate;\r\n    border-radius: 50%;\r\n    height: 2.5rem;\r\n    width: 2.5rem;\r\n`;\r\n\r\nexport const SkeletonText = styled.div`\r\n    opacity: 0.7;\r\n    animation: ${SkeletonLoading} 1s linear infinite alternate;\r\n    width: 10rem;\r\n    height: 0.625rem;\r\n    margin: 0.625rem;\r\n    border-radius: 0.125rem;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n    UserRow,\r\n    UserAvatarContainer,\r\n    UserNameConatiner,\r\n    Avatar,\r\n    SkeletonImage,\r\n} from \"./style\";\r\nimport { SkeletonText } from \"./style\";\r\ntype UserProps = {\r\n    img: string;\r\n    name: string;\r\n    loading: boolean;\r\n};\r\nconst User: React.FC<UserProps> = ({ loading, img, name }: UserProps) => {\r\n    return (\r\n        <UserRow>\r\n            <UserAvatarContainer className=\"col-md-2 col-sm-2 col-xs-2\">\r\n                {loading ? <SkeletonImage /> : <Avatar src={img} />}\r\n            </UserAvatarContainer>\r\n            <UserNameConatiner className=\" col-md-10 col-sm-10 col-xs-10\">\r\n                {loading ? <SkeletonText /> : name}\r\n            </UserNameConatiner>\r\n        </UserRow>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import React, { useCallback, useRef, useState } from \"react\";\r\nimport User from \"./user\";\r\nimport { UserListContainer } from \"./style\";\r\nimport { useUserList } from \"../hooks/useUserList\";\r\n\r\nconst UserList: React.FC = () => {\r\n    const [pageNumber, setPageNumber] = useState<number>(1);\r\n\r\n    const { users, hasMore, loading, error, setLoading } =\r\n        useUserList(pageNumber);\r\n    const observer = useRef<any>(null);\r\n    const lastUserRef = useCallback(\r\n        (node) => {\r\n            if (loading) return;\r\n            if (observer.current) observer.current.disconnect();\r\n            observer.current = new IntersectionObserver((entries) => {\r\n                if (entries[0].isIntersecting && hasMore) {\r\n                    setLoading(true);\r\n                    setTimeout(\r\n                        () =>\r\n                            setPageNumber(\r\n                                (prevPageNumber) => prevPageNumber + 1\r\n                            ),\r\n                        1000\r\n                    );\r\n                }\r\n            });\r\n            if (node) observer.current.observe(node);\r\n        },\r\n        [loading, hasMore]\r\n    );\r\n\r\n    return (\r\n        <UserListContainer className=\"conatiner-fluid\">\r\n            {users.map((user: any, index: number) => {\r\n                if (users.length === index + 1) {\r\n                    return (\r\n                        <div ref={lastUserRef}>\r\n                            <User\r\n                                key={index}\r\n                                img={user.img}\r\n                                name={user.userName}\r\n                                loading={loading}\r\n                            />\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <User\r\n                            key={index}\r\n                            img={user.img}\r\n                            name={user.userName}\r\n                            loading={loading}\r\n                        />\r\n                    );\r\n                }\r\n            })}\r\n            <div>{error && \"Error\"}</div>\r\n        </UserListContainer>\r\n    );\r\n};\r\n\r\nexport default UserList;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useUserList = (pageNumber: number) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [users, setUsers] = useState<{ img: string; userName: string }[]>([]);\r\n    const [hasMore, setHasMore] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setError(false);\r\n        let cancel: any;\r\n        axios({\r\n            method: \"GET\",\r\n            url: \"https://randomuser.me/api/?inc=picture,name\",\r\n            params: { page: pageNumber, results: 15 },\r\n            cancelToken: new axios.CancelToken((c) => (cancel = c)),\r\n        })\r\n            .then((res: any) => {\r\n                setUsers([\r\n                    ...users,\r\n                    ...res.data.results.map((user: any) => {\r\n                        const image = user.picture.medium;\r\n                        const name =\r\n                            \"\" +\r\n                            user.name.title +\r\n                            \" \" +\r\n                            user.name.first +\r\n                            \" \" +\r\n                            user.name.last;\r\n                        return {\r\n                            img: image,\r\n                            userName: name,\r\n                        };\r\n                    }),\r\n                ]);\r\n                setHasMore(res.data.results.length > 0);\r\n                setLoading(false);\r\n            })\r\n            .catch((e) => {\r\n                if (axios.isCancel(e)) return;\r\n                setError(true);\r\n            });\r\n        return () => cancel();\r\n    }, [pageNumber]);\r\n\r\n    return { loading, error, users, hasMore, setLoading };\r\n};\r\n","import { createContext, useContext, useState } from \"react\";\r\n\r\n//Context for Main App to assign values\r\nexport const AuthorizationContext = createContext({\r\n    isAuthenticated: false,\r\n    handleAuthentication: (value: boolean) => {},\r\n});\r\n\r\n//For any child component to access authorization values\r\nexport const useAuthorization = () => {\r\n    return useContext(AuthorizationContext);\r\n};\r\n\r\n//Custom hook to set initial Values\r\nexport const useProvideAuthorization = () => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n    const handleAuthentication = (value: boolean) => {\r\n        setIsAuthenticated(value);\r\n    };\r\n\r\n    return {\r\n        isAuthenticated,\r\n        handleAuthentication,\r\n    };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const HomeContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow: hidden;\r\n`;\r\nexport const HeaderRow = styled.div`\r\n    display: flex;\r\n    margin-top: 1.5rem;\r\n    width: 100%;\r\n`;\r\n\r\nexport const HeadingContainer = styled.div`\r\n    font-size: 1.75rem;\r\n    flex: 10;\r\n    justify-content: center;\r\n`;\r\nexport const ButtonContainer = styled.div`\r\n    flex: 2;\r\n`;\r\nexport const LogoutButton = styled.button`\r\n    margin: 0 2rem 0.25rem 1rem;\r\n`;\r\nexport const ListContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 1rem;\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow: hidden;\r\n`;\r\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserList from \"./user-list-container\";\nimport { useAuthorization } from \"../../Application/authorization-context\";\nimport { LogoutButton, HeadingContainer } from \"./style\";\nimport {\n    HomeContainer,\n    HeaderRow,\n    ButtonContainer,\n    ListContainer,\n} from \"./style\";\n\nconst Home: React.FC = () => {\n    let history = useHistory();\n    const { handleAuthentication } = useAuthorization();\n    const handleLogout = () => {\n        handleAuthentication(false);\n        history.push(\"./login\");\n    };\n    return (\n        <HomeContainer>\n            <HeaderRow>\n                <HeadingContainer>\n                    Home Page\n                </HeadingContainer>\n                <ButtonContainer>\n                    <LogoutButton\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={handleLogout}\n                    >\n                        Logout\n                    </LogoutButton>\n                </ButtonContainer>\n            </HeaderRow>\n            <ListContainer>\n                <UserList />\n            </ListContainer>\n        </HomeContainer>\n    );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\r\n\r\nexport const LoginCard = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 2rem 1rem;\r\n    padding: 1rem;\r\n    label {\r\n        margin-right: 1rem;\r\n    }\r\n`;\r\n\r\nexport const LoginTitle = styled.div`\r\n    margin-bottom: 1rem;\r\n`;\r\n","import React, { FormEvent, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuthorization } from \"../../Application/authorization-context\";\r\nimport { LoginCard, LoginTitle } from \"./style\";\r\n\r\nconst Login: React.FC = () => {\r\n    const [uname, setUname] = useState(\"\");\r\n    const [pswd, setPswd] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    let history = useHistory();\r\n    const { handleAuthentication } = useAuthorization();\r\n\r\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        if (uname === \"foo\" && pswd === \"bar\") {\r\n            setError(\"\");\r\n            handleAuthentication(true);\r\n            history.push(\"./home\");\r\n        } else setError(\"Please enter correct Username and Password\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <LoginCard className=\"card d-flex justify-content-center\">\r\n                <LoginTitle>\r\n                    <h2>Login</h2>\r\n                </LoginTitle>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username:</label>\r\n                        <input\r\n                            className=\"form-control-sm\"\r\n                            type=\"text\"\r\n                            name={\"username\"}\r\n                            id=\"uname\"\r\n                            autoComplete=\"off\"\r\n                            value={uname}\r\n                            onChange={(e) => setUname(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input\r\n                            className=\"form-control-sm\"\r\n                            type=\"password\"\r\n                            name={\"password\"}\r\n                            autoComplete=\"off\"\r\n                            id=\"pswd\"\r\n                            value={pswd}\r\n                            onChange={(e) => setPswd(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    {error && (\r\n                        <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n                            {error}\r\n                        </div>\r\n                    )}\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        disabled={!(uname && pswd)}\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </LoginCard>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    BrowserRouter as Router,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { MainApp } from \"./style\";\r\nimport Home from \"../pages/home/index\";\r\nimport Login from \"../pages/login/index\";\r\nimport {\r\n    AuthorizationContext,\r\n    useProvideAuthorization,\r\n} from \"./authorization-context\";\r\n\r\nconst App: React.FC = () => {\r\n    const authorization = useProvideAuthorization();\r\n    const isAuthenticated = authorization.isAuthenticated;\r\n    const redirectPath = isAuthenticated ? \"/home\" : \"/login\";\r\n    return (\r\n        <MainApp>\r\n            <AuthorizationContext.Provider value={authorization}>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route\r\n                            exact\r\n                            path=\"/\"\r\n                            render={() => <Redirect to={redirectPath} />}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/home\"\r\n                            render={() =>\r\n                                isAuthenticated ? (\r\n                                    <Home />\r\n                                ) : (\r\n                                    <Redirect to={\"/login\"} />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={\"/login\"}\r\n                            render={() =>\r\n                                !isAuthenticated ? (\r\n                                    <Login />\r\n                                ) : (\r\n                                    <Redirect to={\"/home\"} />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            path=\"*\"\r\n                            render={() => <Redirect to={redirectPath} />}\r\n                        />\r\n                    </Switch>\r\n                </Router>\r\n            </AuthorizationContext.Provider>\r\n        </MainApp>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Application/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}